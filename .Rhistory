#   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#   coord_flip() +
#   scale_y_reverse(expand = c(0.2, 0))
p
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
p <- rival_clust %>%
ggdendrogram()
# rival_clust %>%
#   as.dendrogram() %>%
#   dendro_data(type = "rectangle") %>%
#   segment() %>%
#   ggplot() +
#   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#   coord_flip() +
#   scale_y_reverse(expand = c(0.2, 0))
p
?ggdendrogram
p <- rival_clust %>%
ggdendrogram(rotate = TRUE)
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
p <- rival_clust %>%
ggdendrogram(rotate = TRUE)
# rival_clust %>%
#   as.dendrogram() %>%
#   dendro_data(type = "rectangle") %>%
#   segment() %>%
#   ggplot() +
#   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#   coord_flip() +
#   scale_y_reverse(expand = c(0.2, 0))
p
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
p <- rival_clust %>%
ggdendrogram()
# rival_clust %>%
#   as.dendrogram() %>%
#   dendro_data(type = "rectangle") %>%
#   segment() %>%
#   ggplot() +
#   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#   coord_flip() +
#   scale_y_reverse(expand = c(0.2, 0))
p
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_df <- survey_df %>%
inner_join(survey_df, by = c("responder" = "rival")) %>%
filter(rival == responder.y) %>%
select(-responder.y) %>%
rename(rank_received = rank.x, rank_given = rank.y) %>%
mutate(rival_score = (13 - (rank_received + rank_given)/2)/ .12)
choices <- c("James", "Brad", "Kevin", "Shep", "Drew", "Tony", "Milf",
"Keith", "Matt", "Toby", "Ross", "Billy")
survey_results <- list(
Tony = list(James = 1, Brad = 3, Kevin = 6, Shep = 10, Drew = 11, Tony = 12,
Milf = 8, Keith = 7, Matt = 2, Toby = 9, Ross = 5, Billy = 4),
Billy = list(James = 9, Brad = 6, Kevin = 4, Shep = 10, Drew = 8, Tony = 5,
Milf = 7, Keith = 3, Matt = 2, Toby = 12, Ross = 1, Billy = 11),
Matt = list(James = 9, Brad = 5, Kevin = 3, Shep = 10, Drew = 8, Tony = 4,
Milf = 11, Keith = 12, Matt = 1, Toby = 7, Ross = 6, Billy = 2),
Milf = list(James = 10, Brad = 4, Kevin = 5, Shep = 9, Drew = 11, Tony = 7,
Milf = 12, Keith = 3, Matt = 6, Toby = 8, Ross = 1, Billy = 2),
Toby = list(James = 3, Brad = 1, Kevin = 11, Shep = 5, Drew = 2, Tony = 9,
Milf = 10, Keith = 8, Matt = 7, Toby = 12, Ross = 6, Billy = 4),
James = list(James = 12, Brad = 4, Kevin = 3, Shep = 2, Drew = 7, Tony = 1,
Milf = 9, Keith = 6, Matt = 8, Toby = 5, Ross = 11, Billy = 10),
Brad = list(James = 3, Brad = 12, Kevin = 6, Shep = 10, Drew = 1, Tony = 2,
Milf = 9, Keith = 7, Matt = 5, Toby = 11, Ross = 4, Billy = 8),
Ross = list(James = 9, Brad = 7, Kevin = 5, Shep = 12, Drew = 11, Tony = 6,
Milf = 3, Keith = 8, Matt = 4, Toby = 10, Ross = 1, Billy = 2),
Keith = list(James = 9, Brad = 3, Kevin = 1, Shep = 4, Drew = NA, Tony = 8,
Milf = 7, Keith = NA, Matt = 2, Toby = 6, Ross = 5, Billy = 10),
Shep = list(James = 8, Brad = 3, Kevin = 6, Shep = 1, Drew = NA, Tony = 10,
Milf = 9, Keith = 2, Matt = 11, Toby = 5, Ross = 12, Billy = 4),
Drew = list(James = 7, Brad = 2, Kevin = 4, Shep = 10, Drew = 1, Tony = 3,
Milf = 12, Keith = 11, Matt = 8, Toby = 6, Ross = 9, Billy = 5),
Kevin = list(James = 7, Brad = 6, Kevin = 12, Shep = 8, Drew = 9, Tony = 3,
Milf = 4, Keith = 1, Matt = 2, Toby = 5, Ross = 10, Billy = 11)
)
survey_df <- map2(survey_results, names(survey_results), function(x, y) {
as_tibble(x) %>%
gather(rival, rank) %>%
mutate(responder = y)
}) %>%
bind_rows()
p <- rival_df %>%
filter(rival <= responder) %>%
ggplot(aes(x = rival, y = responder)) +
geom_tile(aes(fill = rival_score)) +
scale_fill_viridis("Rival Score") +
xlab("") +
ylab("") +
theme_minimal() +
ggtitle("The Hate Map")
ggplotly(p) %>%
plotly::layout(font = list(family = "Open Sans"))
p1 <- survey_df %>%
group_by(rival) %>%
summarise(score = (13 - mean(rank, na.rm = TRUE))/.12) %>%
ggplot(aes(x = rival, y = score)) +
geom_bar(stat = "identity", fill = "slategray", alpha = 0.8) +
scale_fill_viridis() +
xlab("") +
ylab("Cumulative Rivaltude") +
theme_minimal()
ggplotly(p1) %>%
plotly::layout(font = list(family = "Open Sans"))
p1 <- survey_df %>%
group_by(rival) %>%
summarise(score = (13 - mean(rank, na.rm = TRUE))/.12) %>%
ggplot(aes(x = rival, y = score)) +
geom_bar(stat = "identity", fill = "slategray", alpha = 0.8) +
scale_fill_viridis() +
xlab("") +
ylab("Cumulative Rivaltude") +
theme_minimal()
ggplotly(p1) %>%
plotly::layout(font = list(family = "Open Sans"))
?ggplotly
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(ggdendro)
library(viridis)
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(ggdendro)
library(viridis)
choices <- c("James", "Brad", "Kevin", "Shep", "Drew", "Tony", "Milf",
"Keith", "Matt", "Toby", "Ross", "Billy")
survey_results <- list(
Tony = list(James = 1, Brad = 3, Kevin = 6, Shep = 10, Drew = 11, Tony = 12,
Milf = 8, Keith = 7, Matt = 2, Toby = 9, Ross = 5, Billy = 4),
Billy = list(James = 9, Brad = 6, Kevin = 4, Shep = 10, Drew = 8, Tony = 5,
Milf = 7, Keith = 3, Matt = 2, Toby = 12, Ross = 1, Billy = 11),
Matt = list(James = 9, Brad = 5, Kevin = 3, Shep = 10, Drew = 8, Tony = 4,
Milf = 11, Keith = 12, Matt = 1, Toby = 7, Ross = 6, Billy = 2),
Milf = list(James = 10, Brad = 4, Kevin = 5, Shep = 9, Drew = 11, Tony = 7,
Milf = 12, Keith = 3, Matt = 6, Toby = 8, Ross = 1, Billy = 2),
Toby = list(James = 3, Brad = 1, Kevin = 11, Shep = 5, Drew = 2, Tony = 9,
Milf = 10, Keith = 8, Matt = 7, Toby = 12, Ross = 6, Billy = 4),
James = list(James = 12, Brad = 4, Kevin = 3, Shep = 2, Drew = 7, Tony = 1,
Milf = 9, Keith = 6, Matt = 8, Toby = 5, Ross = 11, Billy = 10),
Brad = list(James = 3, Brad = 12, Kevin = 6, Shep = 10, Drew = 1, Tony = 2,
Milf = 9, Keith = 7, Matt = 5, Toby = 11, Ross = 4, Billy = 8),
Ross = list(James = 9, Brad = 7, Kevin = 5, Shep = 12, Drew = 11, Tony = 6,
Milf = 3, Keith = 8, Matt = 4, Toby = 10, Ross = 1, Billy = 2),
Keith = list(James = 9, Brad = 3, Kevin = 1, Shep = 4, Drew = NA, Tony = 8,
Milf = 7, Keith = NA, Matt = 2, Toby = 6, Ross = 5, Billy = 10),
Shep = list(James = 8, Brad = 3, Kevin = 6, Shep = 1, Drew = NA, Tony = 10,
Milf = 9, Keith = 2, Matt = 11, Toby = 5, Ross = 12, Billy = 4),
Drew = list(James = 7, Brad = 2, Kevin = 4, Shep = 10, Drew = 1, Tony = 3,
Milf = 12, Keith = 11, Matt = 8, Toby = 6, Ross = 9, Billy = 5),
Kevin = list(James = 7, Brad = 6, Kevin = 12, Shep = 8, Drew = 9, Tony = 3,
Milf = 4, Keith = 1, Matt = 2, Toby = 5, Ross = 10, Billy = 11)
)
survey_df <- map2(survey_results, names(survey_results), function(x, y) {
as_tibble(x) %>%
gather(rival, rank) %>%
mutate(responder = y)
}) %>%
bind_rows()
p1 <- survey_df %>%
group_by(rival) %>%
summarise(score = (13 - mean(rank, na.rm = TRUE))/.12) %>%
ggplot(aes(x = rival, y = score)) +
geom_bar(stat = "identity", fill = "slategray", alpha = 0.8) +
scale_fill_viridis() +
xlab("") +
ylab("Cumulative Rivaltude") +
theme_minimal()
ggplotly(p1) %>%
plotly::layout(font = list(family = "Open Sans"))
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(ggdendro)
library(viridis)
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(ggdendro)
library(viridis)
choices <- c("James", "Brad", "Kevin", "Shep", "Drew", "Tony", "Milf",
"Keith", "Matt", "Toby", "Ross", "Billy")
survey_results <- list(
Tony = list(James = 1, Brad = 3, Kevin = 6, Shep = 10, Drew = 11, Tony = 12,
Milf = 8, Keith = 7, Matt = 2, Toby = 9, Ross = 5, Billy = 4),
Billy = list(James = 9, Brad = 6, Kevin = 4, Shep = 10, Drew = 8, Tony = 5,
Milf = 7, Keith = 3, Matt = 2, Toby = 12, Ross = 1, Billy = 11),
Matt = list(James = 9, Brad = 5, Kevin = 3, Shep = 10, Drew = 8, Tony = 4,
Milf = 11, Keith = 12, Matt = 1, Toby = 7, Ross = 6, Billy = 2),
Milf = list(James = 10, Brad = 4, Kevin = 5, Shep = 9, Drew = 11, Tony = 7,
Milf = 12, Keith = 3, Matt = 6, Toby = 8, Ross = 1, Billy = 2),
Toby = list(James = 3, Brad = 1, Kevin = 11, Shep = 5, Drew = 2, Tony = 9,
Milf = 10, Keith = 8, Matt = 7, Toby = 12, Ross = 6, Billy = 4),
James = list(James = 12, Brad = 4, Kevin = 3, Shep = 2, Drew = 7, Tony = 1,
Milf = 9, Keith = 6, Matt = 8, Toby = 5, Ross = 11, Billy = 10),
Brad = list(James = 3, Brad = 12, Kevin = 6, Shep = 10, Drew = 1, Tony = 2,
Milf = 9, Keith = 7, Matt = 5, Toby = 11, Ross = 4, Billy = 8),
Ross = list(James = 9, Brad = 7, Kevin = 5, Shep = 12, Drew = 11, Tony = 6,
Milf = 3, Keith = 8, Matt = 4, Toby = 10, Ross = 1, Billy = 2),
Keith = list(James = 9, Brad = 3, Kevin = 1, Shep = 4, Drew = NA, Tony = 8,
Milf = 7, Keith = NA, Matt = 2, Toby = 6, Ross = 5, Billy = 10),
Shep = list(James = 8, Brad = 3, Kevin = 6, Shep = 1, Drew = NA, Tony = 10,
Milf = 9, Keith = 2, Matt = 11, Toby = 5, Ross = 12, Billy = 4),
Drew = list(James = 7, Brad = 2, Kevin = 4, Shep = 10, Drew = 1, Tony = 3,
Milf = 12, Keith = 11, Matt = 8, Toby = 6, Ross = 9, Billy = 5),
Kevin = list(James = 7, Brad = 6, Kevin = 12, Shep = 8, Drew = 9, Tony = 3,
Milf = 4, Keith = 1, Matt = 2, Toby = 5, Ross = 10, Billy = 11)
)
survey_df <- map2(survey_results, names(survey_results), function(x, y) {
as_tibble(x) %>%
gather(rival, rank) %>%
mutate(responder = y)
}) %>%
bind_rows()
p1 <- survey_df %>%
group_by(rival) %>%
summarise(score = (13 - mean(rank, na.rm = TRUE))/.12) %>%
ggplot(aes(x = rival, y = score)) +
geom_bar(stat = "identity", fill = "slategray", alpha = 0.8) +
scale_fill_viridis() +
xlab("") +
ylab("Cumulative Rivaltude") +
theme_minimal()
ggplotly(p1) %>%
plotly::layout(font = list(family = "Open Sans"))
rival_df <- survey_df %>%
inner_join(survey_df, by = c("responder" = "rival")) %>%
filter(rival == responder.y) %>%
select(-responder.y) %>%
rename(rank_received = rank.x, rank_given = rank.y) %>%
mutate(rival_score = (13 - (rank_received + rank_given)/2)/ .12)
rival_norm_df <- rival_df %>%
mutate(rival_score = ifelse(rival == responder, 0, rival_score)) %>%
replace_na(list(rival_score = 0))
p <- rival_norm_df %>%
filter(rival <= responder) %>%
ggplot(aes(x = rival, y = responder)) +
geom_tile(aes(fill = rival_score)) +
scale_fill_viridis("Rival Score") +
xlab("") +
ylab("") +
theme_minimal() +
ggtitle("The Hate Map")
ggplotly(p) %>%
plotly::layout(font = list(family = "Open Sans"))
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
as.dist(12 - rival_mat) %>%
hclust()
rival_clust <- as.dist(12 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_mat
rival_clust <- as.dist(199 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
?phyloseq::make_network
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
ggdendrogram()
cmdscale(d)
cmdscale(as.dist(100 - rival_mat))
cmdscale(as.dist(100 - rival_mat)) %>%
plot()
install.packages("networkD3")
library(networkD3)
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
?dendroNetwork
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(networkD3)
library(viridis)
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork(fontFamily = "Open Sans")
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
radialNetwork(List = Flare, fontSize = 10, opacity = 0.9, margin=0)
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(List = Flare, fontSize = 10, opacity = 0.9, margin=0)
radialNetwork(as.radialNetwork(rival_clust))
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust))
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust), fontFamily = "Open Sans")
?radialNetwork
?as.radialNetwork
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust, ""), fontFamily = "Open Sans")
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
