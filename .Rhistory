qbProj[, 1] <- gsub("Â[[:space:]]*", "", qbProj[, 1])
View(qbProj)
posTables <- readHTMLTable(tableURL, header = TRUE, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
View(posProj)
position <- 30
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", position,
"&order_by=FFPts&sort_order=DESC")
page <- 0
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, header = TRUE, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
View(posProj)
position <- 40
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", position,
"&order_by=FFPts&sort_order=DESC")
page <- 0
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, header = TRUE, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
View(posProj)
seq(0, 1, 1)
seq(0, 1)
x = 1
exists(x)
exists(x = 1)
exists(x = x)
exists(x = x, where = -1)
exists("x", where = -1)
fftodayURL <- "http://www.fftoday.com/rankings/playerproj.php?"
season <- 2014
positions <- c(10)
for (pos in positions) {
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", pos,
"&order_by=FFPts&sort_order=DESC")
posTable = []
for (page in seq(0, 0)) {
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
}
}
for (pos in positions) {
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", pos,
"&order_by=FFPts&sort_order=DESC")
posTable = data.frame()
for (page in seq(0, 0)) {
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
}
}
library(XML)
for (pos in positions) {
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", pos,
"&order_by=FFPts&sort_order=DESC")
posTable = data.frame()
for (page in seq(0, 0)) {
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
}
}
View(posProj)
rbind(posProj, posProj)
for (pos in positions) {
positionURL <- paste0(fftodayURL, "Season=", season, "&PosID=", pos,
"&order_by=FFPts&sort_order=DESC")
posTable = data.frame()
for (page in seq(0, 1)) {
tableURL <- paste0(positionURL, "&cur_page=", page)
posTables <- readHTMLTable(tableURL, stringsAsFactors = FALSE)
posProj <- posTables[[4]]
posProj <- posProj[-(1:15), c(2, ncol(posProj))]
posProj[, 1] <- gsub("Â[[:space:]]*", "", posProj[, 1])
posTable <- rbind(posTable, posProj)
}
}
View(posTable)
View(posProj)
library(dplyr)
install.packages("dplyr", dependencies = TRUE)
packrat::install_github("dadrivr/FantasyFootballAnalyticsR")
43.3*505^0.32
78/317.352
install.packages("shiny")
library(shiny)
source('~/Google Drive/MyCode/Projects/ffb/code/server.R')
shinyServer
shinyServer(draftUI.R)
shinyServer("code/draftUI.R")
runExample("01_hello")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
teams <- c("Kevin", "Matt", "Brad", "Tony", "Drew", "James", "Shep", "Milf",
"Toby", "Keith")
teams <- c("Kevin", "Matt", "Brad", "Tony", "Drew", "James", "Shep", "Milf",
"Toby", "Keith", "Ross", "Billy")
paste0("Bench", c(1:7))
slots <- c("QB", "RB1", "RB2", "WR1", "WR2", "FLEX", "TE", "DST", "K",
paste0("Bench", c(1:7)))
slots
rosterTable <- data.frame(matrix(nrow = length(slots), ncol = length(teams)),
row.names = slots)
View(rosterTable)
slots <- c("qb", "rb1", "rb2", "wr1", "wr2", "flex", "te", "dst", "k",
paste0("Bench", c(1:7)))
rosterTable <- data.frame(matrix(nrow = length(slots), ncol = length(teams)),
row.names = slots)
View(rosterTable)
slots <- c("qb", "rb1", "rb2", "wr1", "wr2", "flex", "te", "dst", "k",
paste0("bench", c(1:7)))
rosterTable <- data.frame(matrix(nrow = length(slots), ncol = length(teams)),
row.names = slots)
L3 <- letters[1:3]
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
colnames(rosterTable) <- teams
View(rosterTable)
runApp("draftapp/")
runApp("draftapp/")
rosterSize <- length(slots)
startingRoster <- rep("", rosterSize)
startingSalaries <- rep(0, rosterSize)
rosterTable <- data.frame(slot = slots,
player = startingRoster,
paid = startingSalaries)
View(rosterTable)
runApp("draftapp/")
rosterTable <- data.frame(team = "",
slot = slots,
player = startingRoster,
paid = startingSalaries)
View(rosterTable)
rosterTable <- data.frame(team = "",
slot = slots,
player = "",
paid = 0)
View(rosterTable)
library(shiny)
packrat::restore(prompt = FALSE)
library(shiny)
install.packages("shiny")
library(shiny)
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
1 ~= 0
1 != 0
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
budget <- 200
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
rbind("a", "b")
runApp("draftapp/")
runApp("draftapp/")
rbind(paste0(ticker,"/n"), ticker)
ticker <- "no players drafted yet"
rbind(paste0(ticker,"/n"), ticker)
rbind(paste0(ticker,"\n"), ticker)
runApp("draftapp/")
shiny::runApp("draftApp/")
teams <- c("Kevin", "Matt", "Brad", "Tony", "Drew", "James", "Shep", "Milf",
"Toby", "Keith", "Ross", "Billy")
slots <- c("QB", "RB1", "RB2", "WR1", "WR2", "FLEX", "TE", "DST", "K",
paste0("BENCH", c(1:7)))
rosterSize <- length(slots)
budget <- 200
ticker <- "no players drafted yet"
rosterTable <- data.frame(matrix(ncol = 4, nrow = 0))
for (teamName in teams) {
rosterTable <- rbind(rosterTable, data.frame(team = teamName,
slot = slots,
player = "",
pos = "",
proj = 0,
paid = 0))
}
rosterTable$player <- as.character(rosterTable$player)
rosterTable$pos <- as.character(rosterTable$pos)
projections <- read.csv("projections.csv")
projections <- projections[, c(2:4, 6:13)]
projections$name <- as.character(projections$name)
setwd("draftapp/")
teams <- c("Kevin", "Matt", "Brad", "Tony", "Drew", "James", "Shep", "Milf",
"Toby", "Keith", "Ross", "Billy")
slots <- c("QB", "RB1", "RB2", "WR1", "WR2", "FLEX", "TE", "DST", "K",
paste0("BENCH", c(1:7)))
rosterSize <- length(slots)
budget <- 200
ticker <- "no players drafted yet"
rosterTable <- data.frame(matrix(ncol = 4, nrow = 0))
for (teamName in teams) {
rosterTable <- rbind(rosterTable, data.frame(team = teamName,
slot = slots,
player = "",
pos = "",
proj = 0,
paid = 0))
}
rosterTable$player <- as.character(rosterTable$player)
rosterTable$pos <- as.character(rosterTable$pos)
projections <- read.csv("projections.csv")
projections <- projections[, c(2:4, 6:13)]
projections$name <- as.character(projections$name)
View(projections)
library(shiny)
install.packages("ggvis")
library(ggvis)
library(dplyr)
View(rosterTable)
table <- rosterTable %>% group_by(team) %>% mutate(balance = 200 - sum(paid))
View(table)
table %>% ggvis(~team, ~balance) %>% layer_bars()
table <- rosterTable %>% group_by(team) %>% summarise(balance = 200 - sum(paid))
View(table)
table %>% ggvis(~team, ~balance) %>% layer_bars()
slots_remaining = 16
max_bid <- 200 - n - 1
max_bid <- 200 - slots_remaining - 1
max_bid
183 + 15
max_bid <- 200 - slots_remaining + 1
max_bid
table <- rosterTable %>%
group_by(team) %>%
summarise(balance = 200 - sum(paid),
slots_remaining = sum(player == ""),
max_bid = balance - slots_remaining + 1)
View(table)
library(reshape2)
install.packages("reshape2")
packrat::snapshot(prompt = FALSE, project = '~/Google Drive/MyCode/Projects/ffb')
library(reshape2)
table <- rosterTable %>%
group_by(team) %>%
summarise(balance = 200 - sum(paid),
slots_remaining = sum(player == ""),
max_bid = balance - slots_remaining + 1) %>%
melt(value.name = dollars)
?melt
melt(table, id.vars = c("team"))
melt(table, id.vars = "team", variable.name = "budget", value.name = "amount")
table <- rosterTable %>%
group_by(team) %>%
summarise(balance = 200 - sum(paid),
slots_remaining = sum(player == ""),
max_bid = balance - slots_remaining + 1) %>%
melt(melt(id.vars = "team", variable.name = "budget",
value.name = "amount"))
table <- rosterTable %>%
group_by(team) %>%
summarise(balance = 200 - sum(paid),
slots_remaining = sum(player == ""),
max_bid = balance - slots_remaining + 1) %>%
melt(melt(id.vars = team, variable.name = budget,
value.name = amount))
table <- rosterTable %>%
group_by(team) %>%
summarise(balance = 200 - sum(paid),
slots_remaining = sum(player == ""),
max_bid = balance - slots_remaining + 1) %>%
melt(id.vars = "team", variable.name = "budget",
value.name = "amount")
View(table)
table %>% ggvis(~team, ~amount, ~fill = as.factor(budget)) %>%
layer_bars()
library(ggvis)
table %>% ggvis(~team, ~amount, ~fill = as.factor(budget)) %>%
table %>% ggvis(~team, ~amount, ~fill = ~as.factor(budget)) %>%
table %>% ggvis(x = ~team, y = ~amount, ~fill = ~as.factor(budget)) %>%
table %>% ggvis(x = ~team, y = ~amount, fill = ~as.factor(budget)) %>%
layer_bars()
table %>% ggvis(x = ~team, y = ~amount, fill = ~budget) %>%
layer_bars()
table %>% ggvis(x = ~team, y = ~amount, fill = ~budget) %>%
layer_bars(stack = FALSE)
str(table)
packrat::install_github("ramnathv/rNVD3")
install.packages("rjson")
packrat::install_github("ramnathv/rNVD3")
packrat::snapshot(prompt = FALSE, project = '~/Google Drive/MyCode/Projects/ffb')
library(rNVD3)
p1 <- nvd3Plot(amount ~ team | budget, data = table,
type = "multiBarChart")
p1$printChart()
p1$printChart("chart1")
p1 <- nvd3Plot(amount ~ team | budget, data = table,
type = "multiBarChart", width = 600)
p1$printChart("chart1")
require(rNVD3)
p1 <- nvd3Plot(amount ~ team | budget, data = table,
type = "multiBarChart", width = 600)
p1$printChart("chart1")
p1$printChart
p1$printChart()
p1
packrat::install_github("ramnathv/rCharts")
library(rCharts)
p1 <- nPlot(amount ~ team, group = "budget", data = table,
type = "multiBarChart", width = 600)
p1
p1 <- nPlot(amount ~ team, group = "budget", data = table,
type = "multiBarChart", width = 800)
p1
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
p1$chart
p1$chart()
p1$params
p1$chart(color = c("#0072B2", "#D55E00", "#999999"))
p1
p1$chart(color = c("#0072B2", "#E69F00", "#999999"))
p1
p1$chart(color = c("#1f77b4", "#ff7f0e", "#999999"))
p1
runApp("../draftapp/")
p1$params
p1$xAxis(c(1:12))
p1
p1$params
p1$xAxis <- (c(1:12))
p1$xAxis(staggerLabels = TRUE)
p1
p1$chart(reduceXTicks = FALSE)
p1
p1$xAxis(staggerLabels = FALSE)
p1
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
str(rosterTable)
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
p1$xAxis(categories = c("remaining budget", "maximum bid"))
p1
p1$xAxis(categories = c("remaining budget", "slots", "maximum bid"))
p1
p1$xAxis(categories = NULL)
p1
p1$params
p1$legend()
p1$group()
p1$params$legend
p1$group(labels = list("a", "b"))
data(USPersonalExpenditure)
str(USPersonalExpenditure)
View(USPersonalExpenditure)
View(table)
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
runApp("../draftapp/")
library(shiny)
runApp("draftapp/")
install.packages(c("markdown", "mime", "RCurl"))
runApp("draftapp/")
library(shiny)
library(shiny)
runApp("draftapp/")
packrat::snapshot(prompt = FALSE)
runApp("draftapp/")
packrat::install_github("edwindj/whisker")
packrat::snapshot(prompt = FALSE)
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
runApp("draftapp/")
install.packages("shinyApps")
packrat::install_github("rstudio/shinyapps")
packrat::snapshot(prompt = FALSE)
runApp("draftapp/")
library(shinyapps)
runApp("draftapp/")
deployApp("draftapp/")
shinyapps::setAccountInfo(name='jaeddy', token='689941FD3DCFF0382EE68D23148899AD', secret='scR41jb6Q+D15JxqDpLUgcLEsx7mwJLJo8wXCdPU')
deployApp("draftapp/")
packrat::install_github("eddelbuettel/bh")
packrat::snapshot(prompt = FALSE)
deployApp("draftapp/")
source('~/code/github/projects/ffb/R/estimate_opt_budget.R', echo=TRUE)
packrat::off()
packrat::disable()
library(shiny)
runApp("draftapp2015/")
devtools::install_github("ramnathv/rCharts")
runApp("draftapp2015/")
runApp("draftapp2015/")
runApp("draftapp2015/")
runApp("draftapp2015/")
runApp("draftapp2015/")
library(shiny)
runApp("draftapp2015/")
runApp("draftapp2015/")
runApp("draftapp2015/")
