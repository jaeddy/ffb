ylab("Probability") +
xlab("Regular season ranking")
# plot results ------------------------------------------------------------
ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
# plot results ------------------------------------------------------------
ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 11, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
# plot results ------------------------------------------------------------
ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 11, face = "bold", family = "PT Sans")) +
ylab("Probability") +
xlab("Regular season ranking")
# plot results ------------------------------------------------------------
ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 11, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
# plot results ------------------------------------------------------------
ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
?ggsave
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ?ggsave
?ggsave
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 750, height = 400)
par("din")
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold", family = "Myriad Pro")) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
# theme(strip.text = element_text(size = 12, face = "bold", family = "Myriad Pro")) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 2) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold")) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.x.text = element_text(size = 9)) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 9)) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank")
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme_fivethirtyeight() +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
theme_fivethirtyeight()
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
theme_wsj()
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
theme_economist()
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
theme_tufte()
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
theme_stata()
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking") +
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ggtitle("Probability of final league rank") +
ylab("Probability") +
xlab("Regular season ranking")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) +
ylab("Probability") +
xlab("Regular season finish")
p
# ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
#        width = 7.5, height = 4)
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 7.5, height = 6)
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 8, height = 6)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 9)) +
ylab("Probability") +
xlab("Regular season finish")
p
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 8, height = 6)
# plot results ------------------------------------------------------------
p <- ranks_df %>%
mutate_each_(funs(. / 100000), teams) %>%
melt(id.vars = "rank",
variable.name = "team", value.name = "prob") %>%
filter(prob != 0) %>%
ggplot(aes(x = rank, y = prob)) +
geom_bar(aes(fill = prob), stat = "identity", alpha = 0.6) +
facet_wrap(~ team, nrow = 3) +
scale_x_continuous(breaks = 1:12) +
scale_fill_gradient(low = myCbPal[6], high = myCbPal[1],
guide = FALSE) +
theme(strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 9),
panel.grid.minor = element_blank()) +
ylab("Probability") +
xlab("Regular season finish")
p
ggsave("/Users/jaeddy/Desktop/sim_standings.png", p,
width = 8, height = 6)
View(cumsum_df)
library(knitr)
kable(cumsum_df)
kable(cumsum_df, format = "markdown")
cumsum_df <- probs_df %>%
mutate_each_(funs(cumsum) * 100, teams)
cumsum_df <- probs_df %>%
mutate_each_(funs(cumsum * 100), teams)
cumsum_df <- probs_df %>%
mutate_each_(funs(cumsum), teams) %>%
mutate_each_(funs(.*100), teams)
View(cumsum_df)
?kable
kable(cumsum_df, format = "markdown", digits = 2)
