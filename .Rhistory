filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
?dendroNetwork
library(dplyr)
library(tidyr)
library(tibble)
library(purrr)
library(stringr)
library(ggplot2)
library(plotly)
library(networkD3)
library(viridis)
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork(fontFamily = "Open Sans")
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
radialNetwork(List = Flare, fontSize = 10, opacity = 0.9, margin=0)
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(List = Flare, fontSize = 10, opacity = 0.9, margin=0)
radialNetwork(as.radialNetwork(rival_clust))
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust))
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust), fontFamily = "Open Sans")
?radialNetwork
?as.radialNetwork
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
# rival_clust %>%
#   dendroNetwork(fontFamily = "Open Sans")
Flare <- jsonlite::fromJSON(
"https://gist.githubusercontent.com/mbostock/4063550/raw/a05a94858375bd0ae023f6950a2b13fac5127637/flare.json",
simplifyDataFrame = FALSE
)
radialNetwork(as.radialNetwork(rival_clust, ""), fontFamily = "Open Sans")
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
rival_mat <- rival_norm_df %>%
filter(rival <= responder) %>%
select(rival, responder, rival_score) %>%
bind_rows(rival_norm_df %>%
filter(rival < responder) %>%
select(rival = responder, responder = rival, rival_score)) %>%
spread(responder, rival_score) %>%
select(-rival) %>%
as.matrix()
dimnames(rival_mat)[[1]] <- dimnames(rival_mat)[[2]]
rival_clust <- as.dist(100 - rival_mat) %>%
hclust()
rival_clust %>%
dendroNetwork()
source('~/code/github/projects/ffb/R/fetch_powerrankings.R', echo=TRUE)
year = 2017
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
library(flexdashboard)
library(tidyverse)
library(DT)
library(stringr)
library(glue)
source("../R/fetch_powerrankings.R")
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
pr_week3 <- get_powerrankings(2017, 3, data_dir = "../data")
View(pr_week3)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range)
},
.id = "trend_type")
}
read_trends(2017)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1]))
},
.id = "trend_type")
}
read_trends(2017)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1])) %>%
gather(week, rank, -trend_type, -Team)
},
.id = "trend_type")
}
read_trends(2017)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1]))
},
.id = "trend_type") %>%
gather(week, rank, -trend_type, -Team)
}
read_trends(2017)
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank")
trends_df %>%
filter(trend_type == "roster_strength")
trends_df
trends_df %>%
filter(week = "PRE SEASON")
trends_df %>%
filter(week == "PRE SEASON")
c(1:3)
c(1:3)[-1]
c(1:3)[-1:2]
c(1:3)[3:]
c(1:3)[2:]
c(1:3) %>% set_names(c("1", "2"))
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1])) %>%
gather(week, rank, -Team)
},
.id = "trend_type")
}
read_trends(2017)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1])) %>%
gather(week, rank, -Team) %>%
mutate(week = ifelse(week == "PS", "PRE SEASON", week),
week = stringr::str_replace_all(week, " ", ""))
},
.id = "trend_type")
}
read_trends(2017)
read_trends <- function(year, data_dir = "data") {
pr_spreadsheet_path <- glue("~/Dropbox/MyDocuments/Fantasy Football/{year} Jeff Cup Power Rankings.xlsx",
year = year)
list(roster_strength = "B2:S14", power_rank = "V2:AM14") %>%
map_df(function(table_range) {
read_xlsx(pr_spreadsheet_path,
sheet = "TRENDS", range = table_range) %>%
set_names(c("Team", names(.)[-1])) %>%
gather(week, rank, -Team) %>%
mutate(week = ifelse(week == "PS", "PRE SEASON", week),
week = stringr::str_replace_all(week, " ", ""),
week = stringr::str_replace_all(week, "W", "WEEK "))
},
.id = "trend_type")
}
read_trends(2017)
trends_df %>%
filter(trend_type = "power_rank")
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank")
trends_df %>%
filter(trend_type == "power_rank") %>%
ggplot(aes(x = week, y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank") %>%
ggplot(aes(x = week, y = rank)) +
geom_point(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_point(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_line()
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = week, y = rank)) +
geom_point()
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = levels(week), y = rank)) +
geom_point()
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_point()
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line()
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank),
Team == "Alternative Champs") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank") %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_x_continuous(labels = c("0", "1", "2", "3"))
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_x_continuous(breaks = c(1, 2, 3, 4), labels = c("0", "1", "2", "3"))
View(trends_df)
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_x_continuous(breaks = c(1, 2, 3, 4), labels = c("0", "1", "2", "3"))
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3"))
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_reverse()
library(ggthemes)
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_fivethirtyeight() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_colorblind() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_colorblind() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_continuous(breaks = 1:12) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_c() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_continuous(breaks = 1:12) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_continuous(breaks = 1:12) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_continuous(breaks = 1:12, labels = 1:12) +
scale_y_reverse()
trends_df <- read_trends(2017)
trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_reverse(breaks = 1:12)
library(plotly)
trends_df <- read_trends(2017)
p <- trends_df %>%
filter(trend_type == "power_rank",
!is.na(rank)) %>%
mutate(week = forcats::fct_inorder(week)) %>%
ggplot(aes(x = as.numeric(week), y = rank)) +
geom_line(aes(colour = Team)) +
scale_colour_viridis_d() +
scale_x_continuous(breaks = c(1, 2, 3, 4),
labels = c("0", "1", "2", "3")) +
scale_y_reverse(breaks = 1:12)
ggplotly(p)
